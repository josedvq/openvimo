"use strict";(self.webpackChunkopenvimo=self.webpackChunkopenvimo||[]).push([[976],{2053:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"intro","title":"OpenVIMO videocalling platform","description":"OpenVIMO is a platform for videocalling built as a covfee task. It\'s main application is recording of online social interaction such as pair conversations or online meetings. Among its features are:","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/openvimo/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Installation","permalink":"/openvimo/docs/installation"}}');var o=i(4848),s=i(8453);const r={sidebar_position:1},a="OpenVIMO videocalling platform",l={},c=[];function d(e){const n={a:"a",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"openvimo-videocalling-platform",children:"OpenVIMO videocalling platform"})}),"\n",(0,o.jsx)(n.p,{children:"OpenVIMO is a platform for videocalling built as a covfee task. It's main application is recording of online social interaction such as pair conversations or online meetings. Among its features are:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Different study designs can be specified in Python using a graph structure."}),"\n",(0,o.jsx)(n.li,{children:"Crowdsourcing support through covfee."}),"\n",(0,o.jsx)(n.li,{children:"Videocalls can be timed."}),"\n",(0,o.jsx)(n.li,{children:"Chat with data subjects."}),"\n",(0,o.jsx)(n.li,{children:"Admin can view the videocalls without interferring. Please use responsibly by informing data subjects if you intend to use this feature."}),"\n",(0,o.jsx)(n.li,{children:"Admin can pause, restart or force stop the videocalls."}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Open",(0,o.jsx)(n.strong,{children:"VIMO"})," is built on top of Open",(0,o.jsx)(n.strong,{children:"VIDU"}),", an open-source WebRTC framework with an on-premise server that integrates an API for handling calls, a STUN/TURN server and recording capabilities. The OpenVIDU server should be ran separately. To do it, follow ",(0,o.jsx)(n.a,{href:"https://docs.openvidu.io/en/stable/deployment/ce/on-premises/",children:"OpenVIDU deployment instructions"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(6540);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);